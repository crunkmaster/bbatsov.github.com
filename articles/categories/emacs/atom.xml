<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Emacs | (think)]]></title>
  <link href="http://bbatsov.github.com/articles/categories/emacs/atom.xml" rel="self"/>
  <link href="http://bbatsov.github.com/"/>
  <updated>2012-09-12T15:16:43+03:00</updated>
  <id>http://bbatsov.github.com/</id>
  <author>
    <name><![CDATA[Bozhidar Batsov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[guru-mode]]></title>
    <link href="http://bbatsov.github.com/articles/2012/09/09/guru-mode/"/>
    <updated>2012-09-09T21:17:00+03:00</updated>
    <id>http://bbatsov.github.com/articles/2012/09/09/guru-mode</id>
    <content type="html"><![CDATA[<p>Getting started with Emacs is hard. That's a fact of life and you
shouldn't believe anyone telling you otherwise.</p>

<p>One of the harder parts of the journey to Emacs mastery is remembering
all those keybindings at the beginning (<code>C-h t</code>), which can be really
overwhelming. To make matters worse for many common commands there are
two sets of keybindings - the Emacs ones (that are touch typing
friendly) and the popular ones (that typically involve the use of the
arrow keys). Most people never get to use the <em>proper</em> keybindings and
forever make use of the arrow keys.</p>

<p>To help Emacs newcomers get used to the proper Emacs keybindings I've
created <a href="http://github.com/bbatsov/guru-mode">guru-mode</a> - a simple
minor mode that will show you a (helpful) message in the minibuffer
every time you try to use a <em>non Emacs way</em> keybinding.</p>

<p><img src="/images/articles/guru-mode.png"></p>

<p>It will probably annoy you <strong>a lot</strong> in the beginning, but trust me -
it'll be worth it in the long run.</p>

<p><code>guru-mode</code> comes bundled with
<a href="http://github.com/bbatsov/prelude">Emacs Prelude</a> and is available
for installation from <a href="http://marmalade-repo.org">Marmalade</a> and <a href="http://melpa.milkbox.net">MELPA</a>.</p>

<p>P.S. True Emacs mastery cannot be achieved if you do not practice
touch typing; if you're doing hunt-and-peck typing you'd better fire up the
venerable <code>gtypist</code> before looking at <code>guru-mode</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs Support for the Slim Template Language]]></title>
    <link href="http://bbatsov.github.com/articles/2012/09/09/emacs-support-for-the-slim-template-language/"/>
    <updated>2012-09-09T20:16:00+03:00</updated>
    <id>http://bbatsov.github.com/articles/2012/09/09/emacs-support-for-the-slim-template-language</id>
    <content type="html"><![CDATA[<p>I'm mostly a Ruby on Rails developer these days and as such I'm pretty
fond of the <a href="http://slim-lang.com">Slim template language</a>. I've
always hated HTML + ERB, since that evil duo encourages all sorts of
ever practices and recently I've adopted Slim as a replacement for
my long time favourite ERB alternative - <a href="http://haml-lang.com">Haml</a>.</p>

<p>I won't discuss here the shortcomings of Haml vs Slim, but I'll share
with you the big advantage Haml has over Slim (for Emacs users at
least) - it has a pretty nice major editing mode for Emacs. Slim's
Emacs support on the other hand is rather iffy and is presently mostly
based on <code>haml-mode</code>. That will hopefully change soon, since recently
I've become a co-maintainer of
<a href="http://github.com/minad/emacs-slim">slim-mode</a> and I plan to improve
it as much as I can (currently I'm mostly working on precise
font-locking). Any help from interested parties is, naturally, most
welcome. I very much doubt that me and
<a href="https://github.com/minad">Daniel Mendler</a> are the only two people
dreaming of great Slim experience in Emacs. :-)</p>

<p><img src="/images/articles/slim-mode.png"></p>

<p>Let us together eliminate that big Haml advantage. :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A True Emacs Knight]]></title>
    <link href="http://bbatsov.github.com/articles/2012/05/28/a-true-emacs-knight/"/>
    <updated>2012-05-28T15:39:00+03:00</updated>
    <id>http://bbatsov.github.com/articles/2012/05/28/a-true-emacs-knight</id>
    <content type="html"><![CDATA[<p>Here's one true Emacs Knight (courtesy of my friend Gergana
Stancheva). Feel free to use it wherever you see fit.</p>

<p><img src="/images/articles/emacs_knight.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MELPA - homebrew (Emacs Edition)]]></title>
    <link href="http://bbatsov.github.com/articles/2012/04/06/melpa-homebrew-emacs-edition/"/>
    <updated>2012-04-06T18:04:00+03:00</updated>
    <id>http://bbatsov.github.com/articles/2012/04/06/melpa-homebrew-emacs-edition</id>
    <content type="html"><![CDATA[<p>A few weeks ago I wrote an
<a href="http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/">article about the state of package management in Emacs</a>. In
that article I pointed out that on the side of <a href="http://wikemacs.org/wiki/Package.el">package.el</a> too much
was riding on the poorly maintained Marmalade repo. Today
Marmalade went dark (again) and many people are wondering what to do
now. The answer is simple - start using <a href="http://melpa.milkbox.net/">MELPA</a> instead.</p>

<p>I was thinking of starting a project similar to Marmalade to alleviate
its problems, but then the MELPA project was brought to my
attention. This project follows the Homebrew (unofficial OSX package
manager) model of using simple GitHub collaboration to maintain and
grow a bunch of build recipes. In the case of MELPA, those recipes
show how to bundle upstream source packages into package.el-compliant
packages. The recipes can be tested locally by package authors, and
they are run hourly on the MELPA server to create an HTTP package
archive that Emacs users can simply add to their <code>'package-archives</code>
list. As <a href="http://technomancy.us">Phil Hagelberg</a> said - there's no reason to drag in
complicated dependencies like Node for something that's essentially a
pile of static files. MELPA on the other hand is written mostly in
Emacs Lisp and is thus much more comprehensible to casual Emacs hackers.</p>

<p>Most packages currently contained in MELPA are development snapshots,
but the project maintainer
<a href="https://github.com/milkypostman">Donald Curtis</a> and
<a href="http://www.sanityinc.com/">Steve Purcell</a> (aka <code>sanityinc</code>) are
working on extending the MELPA build scripts to support stable
packages, using upstream version tags.</p>

<p>Adding a new package to MELPA is as simple as adding a few lines of
code to the <code>pkglist</code> file in MELPA's source code repo:</p>

<p><code>cl
(name :url "&lt;repo url&gt;"
 :fetcher [git|svn|darcs|wiki]
 [:files ("&lt;file1&gt;", ...)])
</code></p>

<p>You simply have to fork the <a href="https://github.com/milkypostman/melpa">official repo</a>, modify <code>pkglist</code>, send a pull
request and <code>package.el</code> compatible packages will be built
automatically for you on MELPA's server (you can also build the
packages locally to test if everything is OK with your recipes). Sure it's not as easy as
submitting a package via a web UI, but it's a much more robust
approach. It also eliminates a common problem in Marmalade - there
only the original uploader (+ people selected by him) can update a
package. Often the original uploaders are very hard to find...</p>

<p>To use MELPA with Emacs 24 (or a recent version of <code>package.el</code>) just
add this to your <code>.emacs</code> (or equivalent):</p>

<p><code>cl
(add-to-list 'package-archives
'("melpa" . "http://melpa.milkbox.net/packages/") t)
</code></p>

<p>There's a lot more info regarding MELPA on its official website and
I'd rather not duplicate it here.</p>

<p>I would encourage package authors and users to investigate and
contribute to MELPA. I've already submitted a bunch of packages
there and rebased <a href="http://batsov.com/prelude">Emacs Prelude</a> to
use MELPA instead of Marmalade.</p>

<p>Together we can turn MELPA into the most extensive and robust community-supported
<code>package.el</code> repo! Emacs users deserve one of those :-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WikEmacs - The Other Emacs Wiki]]></title>
    <link href="http://bbatsov.github.com/articles/2012/03/26/wikemacs-the-other-emacs-wiki/"/>
    <updated>2012-03-26T11:23:00+03:00</updated>
    <id>http://bbatsov.github.com/articles/2012/03/26/wikemacs-the-other-emacs-wiki</id>
    <content type="html"><![CDATA[<p>I'd like to apologize to everyone insulted by my previous
posts. Contrary to popular belief I acknowledge EmacsWiki's
contribution to the Emacs community. Obviously many people are too
fond of its current format so I doubt that it will ever change
(considerably). I didn't mean to insult anyone, I just wanted to catch
your attention (which unfortunately requires harsher words from time to
time) and point it in the direction of the existing problems.</p>

<p>For the people that weren't happy with EmacsWiki - the ones that felt
my pain and were looking for a change I present
<a href="http://wikemacs.org">WikEmacs</a> (pronounced wikimacs). It's a
MediaWiki powered Emacs wiki, that will try to bring to the community
cleaner, leaner and more up-to-date documentation.</p>

<p>There are only a few guidelines for the contributors there:</p>

<ul>
<li>articles should be geared only towards the current and future
versions of Emacs (currently 23 and 24) for maintainability's sake.</li>
<li>articles should not copy Emacs's or extension's official
documentation - they should refer to it instead. An overview, some
nice pointers, tips and links - that seems like a good article,
doesn't it?</li>
<li>comments and questions should go to an article's discussion page</li>
</ul>


<p>File uploads are disabled on WikEmacs (but image file uploads will
probably be allowed soon) - it will never host Emacs extensions of any
sort.</p>

<p>There is a Google discussion group
<a href="https://groups.google.com/forum/?fromgroups#!forum/wikemacs">here</a>
for more general questions regarding the wiki.</p>

<p>Our goal is not to copy over the 8500 articles available at
EmacsWiki. It's to provide a good road map for new users coming to
Emacs and enough helpful hints and tips for experienced users. Everyone
is welcome to join our efforts.</p>

<p>As far as short term goals go - have a look at the outlined structure
of the wiki (on its home page), pick a section that interests you and
create/extend/improve it. Our content is licensed with GNU's Free
Documentation License (which is compatible with Wikipedia's and
probably EmacsWiki's GPL2). Some nice blog articles about Emacs might
be converted to wiki articles with permission from their authors. You
might find <a href="http://johnmacfarlane.net/pandoc/try">pandoc</a> useful to
automatically convert articles from other formats to MediaWiki markup
and <a href="https://launchpad.net/mediawiki-el">mediawiki.el</a> to edit
articles on wiki from the comfort of your beloved editor.</p>

<p>Thanks to the people that brought us the original EmacsWiki. Thanks to
everyone who supported the idea for the new wiki. Thanks in advance to
all future contributors.</p>

<p>Some people will undoubtedly see the birth of WikEmacs as a separatist move to fraction
the Emacs community. To them I'd like to say that few things in life
are as productive as competition. Obviously a lot of people willing to
contribute to a new wiki are unwilling to do so for EmacsWiki and vice
versa. This is not a contest and there will be no winner. I wish the
best of luck to EmacsWiki and its supporters. What I wish for is to give
our community the best source of documentation available and the
option to choose.</p>
]]></content>
  </entry>
  
</feed>
